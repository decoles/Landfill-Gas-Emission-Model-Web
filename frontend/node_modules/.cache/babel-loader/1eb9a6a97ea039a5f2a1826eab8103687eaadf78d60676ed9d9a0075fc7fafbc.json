{"ast":null,"code":"var _jsxFileName = \"/home/decoles/projects/landfill-emission-model/frontend/src/Component/Inputs/wasteAcceptance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { AppContext } from \"../../AppContext\";\nimport { useNavigate } from 'react-router-dom'; // Assuming you are using React Router for navigation\n\n//Material UI\nimport { InputLabel, Select, MenuItem, FormControl } from \"@mui/material\";\nimport DataGrid from \"react-data-grid\";\nimport 'react-data-grid/lib/styles.css';\nimport { textEditor } from \"react-data-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AcceptanceRates() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    characteristicsData,\n    parametersData,\n    gassesData\n  } = React.useContext(AppContext);\n  const [inputUnits, setInputUnits] = React.useState(0);\n  const [generatedRows, setGeneratedRows] = useState([]);\n  const [unitType, setUnitType] = useState(\"Mg/year\");\n  const [unitType2, setUnitType2] = useState(\"short tons/year\");\n  const YearCalculation = () => {\n    const {\n      openYear,\n      closeYear\n    } = characteristicsData;\n    return closeYear - openYear;\n  };\n\n  //Data to pass to review page\n  const routeChange = () => {\n    if (characteristicsData.openYear === \"\" || characteristicsData.closeYear === \"\") {\n      alert(\"Please enter a valid Open Year or Close Year\");\n      return;\n    }\n    let path = `/review`;\n    const dataToPass = {\n      dataRows: generatedRows,\n      dataColumnHeaders: columnsPassToReview,\n      openYear: characteristicsData.openYear,\n      closeYear: characteristicsData.closeYear,\n      CalClosureYear: characteristicsData.ModelCalculateClosureYear,\n      WasteDesignCapacity: characteristicsData.WasteDesignCapacity,\n      gas1: gassesData.gas1,\n      gas2: gassesData.gas2,\n      gas3: gassesData.gas3,\n      gas4: gassesData.gas4,\n      MethaneGenerationRate: parametersData.methaneGenerationRate,\n      PotentialMethanGenCap: parametersData.potentialMethaneGenerationCapacity,\n      NMOCConcentration: parametersData.nmocConcentration,\n      MethaneContent: parametersData.methaneContent,\n      unitType: unitType,\n      unitType2: unitType2\n    };\n    navigate(path, {\n      state: dataToPass\n    });\n  };\n\n  //Dictates what happens when the drop down menu is changed/ swaps the units\n  const dropDownChange = event => {\n    const selectedValue = event.target.value;\n    setUnitType(selectedValue === 0 ? \"Mg/year\" : \"short tons/year\");\n    setUnitType2(selectedValue === 1 ? \"Mg/year\" : \"short tons/year\");\n    console.log(\"selectedValue\", selectedValue);\n    console.log(\"unitType\", unitType);\n    console.log(\"unitType2\", unitType2);\n  };\n\n  //Just for displaying on input page\n  const columns = [{\n    key: \"year\",\n    name: \"Year\",\n    editable: false\n  }, {\n    key: \"inputUnits\",\n    name: `Input Units ( ${unitType} )`,\n    renderEditCell: textEditor\n  }, {\n    key: \"calculatedUnits\",\n    name: `Calculated Units ( ${unitType2} )`,\n    editable: false\n  }];\n\n  //Columns for the review page, otherwise columns breaks because of renderEditCell\n  const columnsPassToReview = [{\n    key: \"year\",\n    name: \"Year\"\n  }, {\n    key: \"inputUnits\",\n    name: `Input Units ( ${unitType} )`\n  }, {\n    key: \"calculatedUnits\",\n    name: `Calculated Units ( ${unitType2} )`\n  }];\n\n  //Generates the rows for the table based on years\n  useEffect(() => {\n    const newRows = [];\n    for (let i = 0; i <= parseInt(YearCalculation(), 10); i++) {\n      newRows.push({\n        id: i,\n        year: parseInt(characteristicsData.openYear, 10) + parseInt(i, 10),\n        inputUnits: 0,\n        calculatedUnits: 0\n      });\n    }\n    setGeneratedRows(newRows);\n  }, [characteristicsData.openYear, characteristicsData.closeYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Input Units:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: 0,\n        label: \"Input Units:\",\n        onChange: dropDownChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 0,\n          children: \"Mg/year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 1,\n          children: \"short tons/year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        columns: columns,\n        rows: generatedRows,\n        style: {\n          width: \"100%\",\n          border: '2px solid red'\n        },\n        onRowsChange: setGeneratedRows,\n        enableCellSelect: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: routeChange,\n      children: \"Go to Input Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(AcceptanceRates, \"6+0VlPUMjT369HlBp8+y97/7dSg=\", false, function () {\n  return [useNavigate];\n});\n_c = AcceptanceRates;\nexport default AcceptanceRates;\nvar _c;\n$RefreshReg$(_c, \"AcceptanceRates\");","map":{"version":3,"names":["React","useEffect","useState","useRef","AppContext","useNavigate","InputLabel","Select","MenuItem","FormControl","DataGrid","textEditor","jsxDEV","_jsxDEV","AcceptanceRates","_s","navigate","characteristicsData","parametersData","gassesData","useContext","inputUnits","setInputUnits","generatedRows","setGeneratedRows","unitType","setUnitType","unitType2","setUnitType2","YearCalculation","openYear","closeYear","routeChange","alert","path","dataToPass","dataRows","dataColumnHeaders","columnsPassToReview","CalClosureYear","ModelCalculateClosureYear","WasteDesignCapacity","gas1","gas2","gas3","gas4","MethaneGenerationRate","methaneGenerationRate","PotentialMethanGenCap","potentialMethaneGenerationCapacity","NMOCConcentration","nmocConcentration","MethaneContent","methaneContent","state","dropDownChange","event","selectedValue","target","value","console","log","columns","key","name","editable","renderEditCell","newRows","i","parseInt","push","id","year","calculatedUnits","children","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","label","onChange","style","maxHeight","rows","width","border","onRowsChange","enableCellSelect","onClick","_c","$RefreshReg$"],"sources":["/home/decoles/projects/landfill-emission-model/frontend/src/Component/Inputs/wasteAcceptance.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { AppContext } from \"../../AppContext\";\nimport { useNavigate } from 'react-router-dom'; // Assuming you are using React Router for navigation\n\n//Material UI\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControl,\n} from \"@mui/material\";\nimport DataGrid from \"react-data-grid\";\nimport 'react-data-grid/lib/styles.css';\nimport { textEditor } from \"react-data-grid\";\n\n\nfunction AcceptanceRates() {\n  const navigate = useNavigate();\n\n  const { characteristicsData, parametersData, gassesData, } = React.useContext(AppContext);\n  const [inputUnits, setInputUnits] = React.useState(0);\n  const [generatedRows, setGeneratedRows] = useState([]);\n  const [unitType, setUnitType] = useState(\"Mg/year\");\n  const [unitType2, setUnitType2] = useState(\"short tons/year\");\n\n  const YearCalculation = () => {\n    const { openYear, closeYear } = characteristicsData;\n    return closeYear - openYear;\n  };\n  \n  //Data to pass to review page\n  const routeChange = () => {\n    if(characteristicsData.openYear === \"\" || characteristicsData.closeYear === \"\" )\n    {\n      alert(\"Please enter a valid Open Year or Close Year\");\n      return;\n    }\n    let path = `/review`;\n    const dataToPass = {\n      dataRows: generatedRows,\n      dataColumnHeaders: columnsPassToReview,\n      openYear: characteristicsData.openYear,\n      closeYear: characteristicsData.closeYear,\n      CalClosureYear: characteristicsData.ModelCalculateClosureYear,\n      WasteDesignCapacity: characteristicsData.WasteDesignCapacity,\n      gas1: gassesData.gas1,\n      gas2: gassesData.gas2,\n      gas3: gassesData.gas3,\n      gas4: gassesData.gas4,\n      MethaneGenerationRate: parametersData.methaneGenerationRate,\n      PotentialMethanGenCap: parametersData.potentialMethaneGenerationCapacity,\n      NMOCConcentration: parametersData.nmocConcentration,\n      MethaneContent: parametersData.methaneContent,\n      unitType: unitType,\n      unitType2: unitType2,\n\n    };\n    navigate(path, { state: dataToPass });\n  };\n\n  //Dictates what happens when the drop down menu is changed/ swaps the units\n  const dropDownChange = (event) => {\n    const selectedValue = event.target.value;\n    setUnitType(selectedValue === 0 ? \"Mg/year\" : \"short tons/year\");\n    setUnitType2(selectedValue === 1 ? \"Mg/year\": \"short tons/year\");\n    console.log(\"selectedValue\", selectedValue);\n    console.log(\"unitType\", unitType);\n    console.log(\"unitType2\", unitType2);\n  };\n\n  //Just for displaying on input page\n  const columns = [\n    { key: \"year\", name: \"Year\", editable: false},\n    { key: \"inputUnits\", name: `Input Units ( ${unitType} )`, renderEditCell: textEditor},\n    { key: \"calculatedUnits\", name: `Calculated Units ( ${unitType2} )`, editable: false},\n  ];\n\n  //Columns for the review page, otherwise columns breaks because of renderEditCell\n  const columnsPassToReview = [\n    { key: \"year\", name: \"Year\"},\n    { key: \"inputUnits\", name: `Input Units ( ${unitType} )`},\n    { key: \"calculatedUnits\", name: `Calculated Units ( ${unitType2} )`},\n  ];\n\n  //Generates the rows for the table based on years\n  useEffect(() => {\n    const newRows = [];\n    for (let i = 0; i <= parseInt(YearCalculation(), 10); i++) {\n      newRows.push({\n        id: i,\n        year: parseInt(characteristicsData.openYear, 10) + parseInt(i, 10),\n        inputUnits: 0,\n        calculatedUnits: 0,\n      });\n    }\n    setGeneratedRows(newRows);\n    \n  }, [characteristicsData.openYear, characteristicsData.closeYear]);\n\n  return (\n    <div>\n      <FormControl fullWidth>\n        {/* Drowpdown here dosent matter as state is already being passed (choosing Input type) */}\n        <InputLabel>Input Units:</InputLabel>\n        <Select\n          defaultValue={0}\n          label=\"Input Units:\"\n          onChange={dropDownChange}\n        >\n          <MenuItem value={0}>Mg/year</MenuItem>\n          <MenuItem value={1}>short tons/year</MenuItem>\n        </Select>\n      </FormControl>\n      <div style={{maxHeight: \"100%\"}}> \n        <DataGrid \n          columns={columns} \n          rows={generatedRows} \n          style={{ width: \"100%\", border: '2px solid red' }} \n          onRowsChange={setGeneratedRows}\n\n          enableCellSelect={true}\n          />\n      </div>\n\n        <button onClick={routeChange}>Go to Input Review</button>\n        \n    </div>\n  );\n}\n\nexport default AcceptanceRates;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}